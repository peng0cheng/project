<!-------------------------------------------------------------------------------------------------------------------------------------------------->
<!------------------------------------------------------------【流程控制】 【结构】----------------------------------------------------------------->
【顺序结构】																<程序默认自上而下的执行顺序>
【单项分支结构】	if(变量==值){多条PHP语句}
【双项分支结构】	if(变量==值){多条PHP语句}								<else前的区间为真区间>
					else{多条PHP语句}										<else后的区间为假区间>
【多项分支结构】	if(变量==值){多条PHP语句}
					elseif(变量==值){多条PHP语句}...
					else{多条PHP语句}
【多项分支结构】	switch(变量==值){
						case 值:多条PHP语句;break...						<case值必须是确定值>|<不能是范围值>|<不能使用浮点型>|<break破坏执行顺序>
						default:多条PHP语句									<相当于else>
					}
【巢状分支结构】	if(变量==值){
						PHP语句
						if(变量==值){
							 PHP语句
						}
						else{PHP语句}
					}
					else{PHP语句}
<!------------------------------------------------------------【流程控制】 【循环】----------------------------------------------------------------->
【while型循环】		While(条件){
						用于循环的PHP代码
						自增或者自减条件
					}
【do while型循环】	do{
						用于循环的PHP代码
						自增自减条件
					}
					while(条件)
【for循环】 		for(初始化条件;条件表达式;自增自减条件){
						用于循环的PHP代码
					}
【foreach循环】		continue												<终止本次循环开启下一次的循环>
<!-------------------------------------------------------------------------------------------------------------------------------------------------->
<?PHP
[===================================================================================================================================================]
[=============================================================【流程控制】 【单项分支】=============================================================]
$peng='彭';
if($peng=='彭'){		//if判定成立，输出if部分
	echo '高';
	echo '帅';			//echo【高帅】
}
[=============================================================【流程控制】 【双项分支】=============================================================]
$pc='彭程';
if($pc=='不是彭程'){		//if判定不成立，输出else部分
	echo '高';
	echo '帅';
}
else{						//echo【矮龊】
	echo '矮';
	echo '龊';
}
[=============================================================【流程控制】 【多项分支】=============================================================]
【多项分支_01】
$cj=50;
if($cj==100){echo '满分';}					//$cj=100时，返回值：满分
elseif($cj>=85){echo '优秀';}				//$cj>=85时，返回值：优秀
elseif($cj>=70){echo '良好';}				//$cj>=70时，返回值：良好
elseif($cj>=60){echo '及格';}				//$cj>=60时，返回值：及格
else{echo'不及格';}							//echo【不及格】
【多项分支_02】
$week=7;
switch($week){
	case 1:echo '今天是周一';break;				//$week=1时，返回值：今天是周一
	case 2:echo '今天是周二';break;				//$week=2时，返回值：今天是周二
	case 3:echo '今天是周三';break;				//$week=3时，返回值：今天是周三
	case 4:echo '今天是周四';break;				//$week=4时，返回值：今天是周四
	case 5:echo '今天是周五';break;				//$week=5时，返回值：今天是周五
	default:echo '今天是周末';					//echo【今天是周末】
}
[=============================================================【流程控制】 【巢状分支】=============================================================]
【巢状分支】
$mission_01=true;
$mission_02=true;
$mission_03=false;
if($mission_01){							//如果$mission_01为真，执行以下语句
	echo '第一局赢了<br>';					//$mission_01为真，echo【第一局赢了】
	if($mission_02){						//如果$mission_02为真，执行以下语句
		echo '第二局赢了<br>';				//$mission_02为真，echo【第二局赢了】
		if($mission_03){					//如果$mission_03为真，执行以下语句
			echo '第三局赢了<br>';			//如果$mission_03为真，返回值：第三局赢了
		}
		else{echo '第三局输了，结束<br>';	//$mission_03为假，echo【第三局输了，结束】
		}
	}
	else{echo '第二局输了，结束<br>';}		//如果$mission_02为假，返回值：第二局输了，结束
}
else{echo '第一局输了，结束<br>';}			//如果$mission_01为假，返回值：第一局输了，结束
[=============================================================【流程控制】 【while循环】============================================================]
【例：从1加到100】
$begin=1;									//用于循环计数的变量
$result=0;									//结果变量
while($no<=100){							//$begin值<100时停止循环，即循环100次
	$result=$result+$begin;					//第一轮循环后$result=0+1=1将给第二轮循环使用
	$begin++;								//第一轮循环后$begin=1+1=2将给第二轮循环使用
}
echo $result;								//echo【5050】
【例：普通10x10表格】
echo '<table border="1" width="800">';			//输出表格开始标签
	$tr=1;										//$st起始值1，用于控制行数
	while($tr<=10){								//循环10次以下内容
		echo '<tr>';							//循环10次<tr>相当于行数10
		$td=1;									//变量$td起始值1，用于控制列数
		while($td<=10){							//循环10次<td>相当于列数10
			echo'<td>'.$td.'</td>';				//每个列单元格中的值刚好为列数
			$td++;								//每次循环列数+1
		}
		echo '</tr>';							//输出10次</tr>结束标签
		$tr++;									//每次循环行数+1
	}
echo '</table>';									//输出表格结束标签
【例：隔行变色10x10表格】
echo '<table border="1" width="800">';
	$tr=1;
	while($tr<=10){
		if($tr%2==1){echo '<tr bgcolor="red">';}	//echo<tr>被替换成if语句，如果为单数行，添加红底色
		else{echo '<tr bgcolor="blue">';}			//echo<tr>被替换成if语句，如果为双数行，添加蓝底色
		$td=1;
		while($td<=10){
			echo'<td>'.$td.'</td>';
			$td++;
			}
		echo '</tr>';
		$tr++;
	}
echo '</table>';
【例：单层循环10x10表格】
echo '<table border="1">';
	$td=0;
	while($td<100)								//先输入100个列
	{
		if($td%10==0){echo '<tr>';}				//每遇到第0 10 20...个列插入一个<tr>
		echo '<td>'.$td.'</td>';
		if($td%10==9){echo '</tr>';}			//每遇到第9 19 29...个列插入一个</tr>
	$td++;
	}
echo '</table>';
[=============================================================【流程控制】 【for循环】==============================================================]
【例：输入5条横线】
for($line=0;$line<5;$line++){, 						//变量line从0开始，循环次数小于5，每次循环+1
	echo $num.'<hr>';								//每次循环加入一条横线
}
【例：普通10x10表格】
echo '<table border="1" width="800">';
	for($tr=0;$tr<10;$tr++){
		echo '<tr>';
		for($td=0;$td<10;$td++){
			echo '<td>'.$tr.$td.'</td>';				//单元格中的值为：十位数为行数，个位数为列数
		}
		echo '</tr>';
	}
echo '</table>';
【例：九九乘法表】
echo '<table border="1">';
	for($tr=1;$tr<=9;$tr++){								//行数从1开始，行数不超过9，每次循环行数加+1
		echo '<tr>';
		for($td=1;$td<=$tr;$td++){							//列数从1开始，每次循环列数总小于等于行数，每次循环列数+1
			echo '<td>'.$td.'*'.$tr.'='.($td*$tr).'</td>';
		}
		echo '</tr>';
	}
echo '</table>';
[=============================================================【流程控制】 【foreach循环】==========================================================]
for($num=0;$num<=10;$num++){
	if($num==4){								//筛选出4
		continue;								//当符合if条件时，跳过本次循环，开启下一次循环
	}
	echo $num.'<hr>';
}
[===================================================================================================================================================]